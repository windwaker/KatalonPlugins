{"openapi":"3.0.1","info":{"title":"DDPersonPolicy","description":"Person Policy service for DD","contact":{"name":"EI Support Distribution Group","email":"EI_Support_dg@vhi.ie"},"version":""},"servers":[{"url":"http://localhost:8080","description":"local - localhost"},{"url":"https://api.ci.vhi.ie","description":"CI - Continuous Integration"},{"url":"https://api.pit.vhi.ie","description":"PIT - Public Interface Testing"},{"url":"https://api.preprod.vhi.ie","description":"PreProd - Pre-Production"}],"security":[{}],"tags":[{"name":"Corporate API","description":"APIs for retrieving details from Corporate tables."},{"name":"Customer API","description":"APIs for retrieving Customer details."},{"name":"Customer Covers API","description":"APIs for retrieving Customer covers."},{"name":"Customer Policies API","description":"APIs for retrieving Customer policies details."},{"name":"Customer Roles API","description":"APIs for retrieving Customer roles details."},{"name":"Linked Customers API","description":"APIs for retrieving Policy details."},{"name":"OKTA Stub APIs","description":"Stub endpoints for OKTA"},{"name":"Policy API","description":"APIs for retrieving Policy details."},{"name":"Policy Roles API","description":"APIs for retrieving Customer policy roles."},{"name":"Policy Validation API","description":"APIs for validating policies."}],"paths":{"/validate":{"post":{"tags":["Policy Validation API"],"summary":"This is a POST operation for validating policies","description":"## Synopsis\n\nThis API will accepts basic policy details for validation against the back-end system, checking against the rules of the\nbusiness service in question, supplied as the **validationType** of the request body to this API.\n\nOn successfully validiting the request contents, the service returns a **Status 200** response code.\nIn the event of the content failing validation, a **Status 422** response code is returned.\n\n### Request\n\n**Example Request Body**\n\n```\n{\n  \"effectiveDate\": \"2018-05-31\",\n  \"policyReference\": 1234567,\n  \"dateOfBirth\": \"1980-12-25\",\n  \"validationType\": \"BEATS_MEDICAL\"\n}\n```\n\n* **effectiveDate** (optional, default today), An effective date may be passed to this API.\n* **policyReference** The public-facing policy reference or number.\n* **dateOfBirth** The date of birth of the person to validate against.\n* **validationType** - the type or business service in question. Currently supported values are:\n    - **BEATS_MEDICAL** Validate the request body qualifies for a discount off the Beats Medical Smartphone Application.\n\n### Behaviour\n\n* **Successful Validation** - While the API returns a Boolean true in the body, a response status of 200 is sufficient\n  to indicate success.\n* **Failed Validation**\n  For a non-technical validation failure, the API returns a status 422 to indicate failure.","operationId":"validatePolicy","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/StubPolicyValidationRequest"}}},"required":true},"responses":{"404":{"description":"Not Found","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"503":{"description":"Service Unavailable","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"406":{"description":"Not Acceptable","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"403":{"description":"Forbidden","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"405":{"description":"Method Not Allowed","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"409":{"description":"Conflict","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"415":{"description":"Unsupported Media Type","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"422":{"description":"Unprocessable Entity","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorsView"}}}},"500":{"description":"Internal Server Error","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"400":{"description":"Bad Request","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"200":{"description":"OK","content":{"*/*":{"schema":{"type":"boolean"}}}}}}},"/v99/policies/validate":{"post":{"tags":["OKTA Stub APIs"],"description":"## Synopsis\n\nThis API will return Stub object for any request.\n\nExample of the request :\n\n    {    \n    \"policyReference\": 1234567,\n    \n    \"dateOfBirth\": \"2010-01-22\",\n    \n    \"validationType\": \"OKTA\"\n    }\n\nIt will return **true** for every id except for policyReference = 77777.","operationId":"postStubValidation","requestBody":{"content":{"application/json":{"schema":{"$ref":"#/components/schemas/StubPolicyValidationRequest"}}},"required":true},"responses":{"404":{"description":"Not Found","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"503":{"description":"Service Unavailable","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"406":{"description":"Not Acceptable","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"403":{"description":"Forbidden","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"405":{"description":"Method Not Allowed","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"409":{"description":"Conflict","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"415":{"description":"Unsupported Media Type","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"422":{"description":"Unprocessable Entity","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorsView"}}}},"500":{"description":"Internal Server Error","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"400":{"description":"Bad Request","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/StubValidation"}}}}}}},"/{customerId}/policies/{policyId}":{"get":{"tags":["Customer Policies API"],"summary":"This API will return policy details for the given policyId.","description":"## Synopsis\n\nThis API will return more complete details for the customer's policy.\nNote, the *policyId* is an **internal ID** whereas the *reference* is the **customer-facing** value. Internal IDs are\nused for service calls...\n\n### Parameters\n\n* **effectiveDate** - (optional, default today), An effective date may be passed to this API and the policy data will be\n  returned based on the given effective date. When not specified, the service defaults to *today*.\n* **includeInsured** (optional, default true), When this parameter value is *true*, the API will return an *\n  insuredCustomers* list:\n\n ```\n\"insuredCustomers\": [\n        {\n            \"customerId\": 7475096,\n            \"firstName\": \"Inigo\",\n            \"surname\": \"Montoya\",\n            \"titleCode\": \"MR\",\n            \"title\": \"Mr\",\n            \"genderCode\": \"M\",\n            \"gender\": \"Male\",\n            \"dateOfBirth\": \"1980-01-01T02:00:00.000Z\",\n            \"age\": 38,\n            \"lifestageCode\": \"ADULT\",\n            \"lifestage\": \"Adult\",\n            \"plan\": {\n                \"planCode\": \"DNT2PLN\",\n                \"name\": \"Vhi Dental Plan\",\n                \"covers\": [\n                    {\n                        \"coverCode\": \"DNT2SPLN\",\n                        \"name\": \"Vhi Dental Plan\",\n                        \"mandatory\": true\n                    }\n                ]\n            },\n            \"links\": [\n                {\n                    \"rel\": \"customer\",\n                    \"href\": \"http://localhost:9083/CustomerPolicyService/v1/customers/7475096\"\n                },\n                {\n                    \"rel\": \"key-benefits\",\n                    \"href\": \"http://localhost:9083/KanaCiboodleService/v1/benefits/key?effectiveDate=2018-12-01&productCode=DNT&planCode=DNT2PLN&geoRegionCode=&age=38&genderCode=M\"\n                }\n            ]\n        }\n    ]\n``` \n\n* **includePlan** - (optional, default true), When this parameter value is *true*, the API will will try to display a\n  representation of the level of cover via the **plan** object. i.e. If every insured customer on the policy has the\n  same level of cover (disregarding dates), the *policy.plan* will have that level of cover set on it also:\n\n ```\n\"plan\": {\n        \"planCode\": \"DNT2PLN\",\n        \"name\": \"Vhi Dental Plan\",\n        \"covers\": [\n            {\n                \"coverCode\": \"DNT2SPLN\",\n                \"name\": \"Vhi Dental Plan\",\n                \"mandatory\": true\n            }\n        ]\n    }\n``` \n\nThese parameters are intended to offer a degree of flexibility to clients with performance in mind, allowing for minimal\nloading of data from the back end for various needs.\n*Note:* When *includeInsured* is true, the service has enough data loaded to be able to determine the policy's level of\ncover so a policy.plan will be returned irrespective of the *includePlan* parameter value.\n\n### Behaviour\n\n* **Policy Holder** - The policy contains a policyHolder object with only the customerId populated:\n\n ```\n\"policyHolder\": {\n        \"customerId\": 7475096,\n        \"links\": [\n            {\n                \"rel\": \"policy-holder\",\n                \"href\": \"http://localhost:9083/CustomerPolicyService/v1/customers/7475096\"\n            }\n        ]\n    }\n``` \n\n* **Level of cover** - As well as returning policy details such as the dates, product, etc., each policy will try to\n  display a representation of the level of cover via the **plan** object. i.e. If every insured customer on that policy\n  has the same level of cover (disregarding dates), the policy.plan will have that level of cover set on it also.\n  Individual levels of cover are evident on each insured customer when present.\n* **Not found** - If no policy is found matching the policyId, a **404** is returned.","operationId":"getPolicy","parameters":[{"name":"customerId","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"name":"policyId","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"name":"effectiveDate","in":"query","required":false,"schema":{"type":"string","format":"date"}},{"name":"includeInsured","in":"query","required":false,"schema":{"type":"boolean","default":true}},{"name":"includePlan","in":"query","required":false,"schema":{"type":"boolean","default":true}}],"responses":{"404":{"description":"Not Found","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"503":{"description":"Service Unavailable","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"406":{"description":"Not Acceptable","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"403":{"description":"Forbidden","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"405":{"description":"Method Not Allowed","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"409":{"description":"Conflict","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"415":{"description":"Unsupported Media Type","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"422":{"description":"Unprocessable Entity","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorsView"}}}},"500":{"description":"Internal Server Error","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"400":{"description":"Bad Request","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Policy"}}}}}}},"/{customerId}/linked-persons":{"get":{"tags":["Linked Customers API"],"summary":"This API will return a list of persons associated with the given person in the context of a business service.","description":"## Synopsis\n\nGiven a valid **customerId**, this API will return the details for associated persons in the back-end system that match\nthe rules of the business service in question, supplied as the **type** parameter to this API.\n\nThe API may or may not also return the person in the path variable, depending on the business rules. The returned list\ncontains **skeleton details** of InsuredPerson entities and an empty list is of course also possible:\n\n**Skeleton level of detail** returned on the InsuredPerson response objects:\n`personId, firstName, surname, genderCode, gender, dateOfBirth, ineligible*`\n\n```\n{  \n  \"content\": [\n        {\n            \"personId\": 7374784,\n            \"firstName\": \"Bob\",\n            \"surname\": \"Dobalina\",\n            \"genderCode\": \"M\",\n            \"gender\": \"Male\",\n            \"dateOfBirth\": \"1980-01-01\"\n        },\n        {\n            \"personId\": 7374787,\n            \"firstName\": \"Princess\",\n            \"surname\": \"Dobalina\",\n            \"genderCode\": \"F\",\n            \"gender\": \"Female\",\n            \"dateOfBirth\": \"2010-06-01\"\n        }\n    ]\n}\n```    \n\n*ineligible is optionally returned, depending on service type specification\n\nFunctionally, this API may be useful in getting details of persons to populate a drop-down list or other display\nmechanism. If further details are required for a returned person, then the relevant service endpoint can be called to\nload those details.\n\n### Parameters\n\n* **type** - (required), the type or business service in question. Currently, supported values are:\n    - **snap-and-send** Persons for whom the path variable person may use the Snap And Send service.\n    - **online-doctor** Persons for whom the path variable person may use the Online Doctor service.\n    - **gp-permissions** Persons for whom the path variable person may use to get all insured persons on the policy\n      holder.\n* **effectiveDate** (optional, default today), An effective date may be passed to this API.\n\n### Behaviour\n\n* **Sorting** - Lists are sorted based on the Insured Person's date of birth, from the oldest to the youngest.\n  If the path variable person is included for return, they are always returned to the first position of the list.\n* **Eligibility**\n  In certain circumstances, it is desirable for the client to have a person returned for display but perhaps disallowed\n  from using the service in question (and greyed out), e.g. too young for Online Doctor.\n  In such cases, based on the business service rules, the InsuredPerson's **ineligible** attribute will be set to true.","operationId":"getLinkedPersons","parameters":[{"name":"personId","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"name":"type","in":"query","required":true,"schema":{"type":"string"}},{"name":"effectiveDate","in":"query","required":false,"schema":{"type":"string","format":"date"}}],"responses":{"404":{"description":"Not Found","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"503":{"description":"Service Unavailable","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"406":{"description":"Not Acceptable","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"403":{"description":"Forbidden","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"405":{"description":"Method Not Allowed","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"409":{"description":"Conflict","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"415":{"description":"Unsupported Media Type","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"422":{"description":"Unprocessable Entity","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorsView"}}}},"500":{"description":"Internal Server Error","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"400":{"description":"Bad Request","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/CollectionModelInsuredPerson"}}}}}}},"/v99/customers/{id}":{"get":{"tags":["OKTA Stub APIs"],"description":"\n## Synopsis\n\nThis API will return Stub object for any **id**.\n\n### Parameters\n\n* **includeContacts** (default true), when true, further back-end procedures are called to also return the person's\n  current address and contact information. This is defaulted to true as it is expected to be the typical use-case for\n  the API that the client will require this information.","operationId":"getCustomerById","parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"name":"includeContacts","in":"query","required":false,"schema":{"type":"boolean","default":true}}],"responses":{"404":{"description":"Not Found","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"503":{"description":"Service Unavailable","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"406":{"description":"Not Acceptable","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"403":{"description":"Forbidden","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"405":{"description":"Method Not Allowed","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"409":{"description":"Conflict","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"415":{"description":"Unsupported Media Type","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"422":{"description":"Unprocessable Entity","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorsView"}}}},"500":{"description":"Internal Server Error","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"400":{"description":"Bad Request","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/StubCustomer"}}}}}}},"/v1/policies":{"get":{"tags":["Policy API"],"summary":"This API will return a policy with its policyId populated","description":"## Synopsis\n\nGiven a valid **reference**, this API will return a Policy object based on the reference/policyId. The Policy object\nwill include a list of insured customers on the policy with the following details.\n`personId, firstName, surname, age`\n\n   ````\n    \"insuredPersons\": [\n    {\n    \"personId\": 7762426,\n    \"firstName\": \"TCicgh\",\n    \"surname\": \"Automationeeha\",\n    \"age\": 41,\n    \"links\": []\n    },\n    {\n    \"personId\": 7762430,\n    \"firstName\": \"TC129_Child3\",\n    \"surname\": \"Automationeeha\",\n    \"age\": 2,\n    \"links\": []\n    }\n    ],\n    \"links\": []\n    }\n````\n\n### Parameters\n\n* **reference** - A policy reference e.g. 1234567 i.e. the policy number field from Gios.\n\n### Behaviour\n\n* When this end point is called with correct credentials, a **Status 200 (OK)** response code is returned with\n  restricted details for insured dependents for the policy reference passed as request parameter.\n* If no policy is found matching the reference, a **Status 404 (Not Found)** is returned.","operationId":"getPolicyFromReference","parameters":[{"name":"reference","in":"query","required":true,"schema":{"type":"string"}}],"responses":{"404":{"description":"Not Found","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"503":{"description":"Service Unavailable","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"406":{"description":"Not Acceptable","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"403":{"description":"Forbidden","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"405":{"description":"Method Not Allowed","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"409":{"description":"Conflict","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"415":{"description":"Unsupported Media Type","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"422":{"description":"Unprocessable Entity","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorsView"}}}},"500":{"description":"Internal Server Error","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"400":{"description":"Bad Request","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/Policy"}}}}}}},"/v1/persons/{giosPartnerId}":{"get":{"tags":["Customer API"],"summary":"This API will return person base details for a person such as name, date of birth, gender, etc.","description":"## Synopsis\n\nGiven a valid **giosPartnerId**, this API will return the details for the matching person in the back-end system.\n\nThe API accepts an optional parameter which can influence the amount of information returned. Logically, requesting\nfurther information will increase the load and the response times.\n\n### Parameters\n\n* **includeContacts** (default true), when true, further back-end procedures are called to also return the person's\n  current address and contact information. This is defaulted to true as it is expected to be the typical use-case for\n  the API that the client will require this information.\n","operationId":"getCustomerByGiosPartnerId","parameters":[{"name":"giosPartnerId","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"name":"includeContacts","in":"query","required":false,"schema":{"type":"boolean","default":true}}],"responses":{"404":{"description":"Not Found","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"503":{"description":"Service Unavailable","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"406":{"description":"Not Acceptable","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"403":{"description":"Forbidden","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"405":{"description":"Method Not Allowed","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"409":{"description":"Conflict","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"415":{"description":"Unsupported Media Type","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"422":{"description":"Unprocessable Entity","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorsView"}}}},"500":{"description":"Internal Server Error","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"400":{"description":"Bad Request","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Customer"}}}}}}},"/v1/groupschemes/{schemeId}":{"get":{"tags":["Corporate API"],"summary":"This API will return base scheme details by corporate scheme Id.","description":"## Synopsis\n\nGiven a valid **schemeId**, this API will return the details for the matching corporate scheme in the back-end system.\n\n### Parameters\n\n* **effectiveDate** (default _today_). Used to retrieve scheme details that are/were effective on a specific date.\n* **includeContacts** (default _true_). When true, further back-end procedures are called to also return the Web VHI\n  contact's address and contact information for the current scheme. This is defaulted to true as it is expected to be\n  the typical use-case for the API that the client will require this information.","operationId":"getScheme","parameters":[{"name":"schemeId","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"name":"effectiveDate","in":"query","required":false,"schema":{"type":"string","format":"date"}},{"name":"includeContacts","in":"query","required":false,"schema":{"type":"boolean","default":true}}],"responses":{"404":{"description":"Not Found","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"503":{"description":"Service Unavailable","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"406":{"description":"Not Acceptable","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"403":{"description":"Forbidden","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"405":{"description":"Method Not Allowed","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"409":{"description":"Conflict","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"415":{"description":"Unsupported Media Type","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"422":{"description":"Unprocessable Entity","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorsView"}}}},"500":{"description":"Internal Server Error","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"400":{"description":"Bad Request","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/GroupScheme"}}}}}}},"/v1/customers/{id}":{"get":{"tags":["Customer API"],"description":"## Synopsis\n\nGiven a valid **id**, this API will return the details for the matching customer in the back-end system.\n\nThe API accepts an optional parameter which can influence the amount of information returned. Logically, requesting\nfurther information will increase the load and the response times.\n\n### Parameters\n\n* **includeContacts** (default true), when true, further back-end procedures are called to also return the person's\n  current address and contact information. This is defaulted to true as it is expected to be the typical use-case for\n  the API that the client will require this information.\n","operationId":"getCustomerById_1","parameters":[{"name":"id","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"name":"includeContacts","in":"query","required":false,"schema":{"type":"boolean","default":true}}],"responses":{"404":{"description":"Not Found","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"503":{"description":"Service Unavailable","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"406":{"description":"Not Acceptable","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"403":{"description":"Forbidden","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"405":{"description":"Method Not Allowed","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"409":{"description":"Conflict","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"415":{"description":"Unsupported Media Type","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"422":{"description":"Unprocessable Entity","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorsView"}}}},"500":{"description":"Internal Server Error","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"400":{"description":"Bad Request","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/Customer"}}}}}}},"/v1/customers/{customerId}/roles":{"get":{"tags":["Customer Roles API"],"summary":"This API will return customer roles","description":"## Synopsis\n\nGiven a valid **customerId**, this API will return the details for the matching customer roles in the back-end system.\n\nThe API accepts optional parameters which can influence the amount of information returned. Logically, requesting\nfurther information will increase the load and the response times.\n\n### Parameters\n\n* **effectiveFrom** - Optional. The effective from date in ISO Short date format.\n* **effectiveTo** - Optional. The effective to date in ISO Short date format.\n* **objectType** - Optional. POLICY for policy. CATEGORY for Collection Reference\n* **objectId** - Optional. Integer value for Policy, CA or ET.\n* **roleType** - Optional. The role type such as PH for Policy Holder, INS for Insured, PAY for Payer, and OWNER for\n  Customer Account owner\n\nThe **effectiveFrom** and **effectiveTo**  parameters have to be either both provided, or none of them. If only one of\nthem is provided in the request, 400 Bad Request error will be returned by the service.\n\nThe **effectiveFrom** (if provided) has to be before or equals to the **effectiveTo**. If it's not, 400 Bad Request\nerror will be returned by the service. ","operationId":"getCustomerRoles","parameters":[{"name":"customerId","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"name":"effectiveFrom","in":"query","required":false,"schema":{"type":"string","format":"date"}},{"name":"effectiveTo","in":"query","required":false,"schema":{"type":"string","format":"date"}},{"name":"objectType","in":"query","required":false,"schema":{"type":"string"}},{"name":"objectId","in":"query","required":false,"schema":{"type":"integer","format":"int64"}},{"name":"roleType","in":"query","required":false,"schema":{"type":"string"}}],"responses":{"404":{"description":"Not Found","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"503":{"description":"Service Unavailable","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"406":{"description":"Not Acceptable","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"403":{"description":"Forbidden","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"405":{"description":"Method Not Allowed","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"409":{"description":"Conflict","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"415":{"description":"Unsupported Media Type","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"422":{"description":"Unprocessable Entity","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorsView"}}}},"500":{"description":"Internal Server Error","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"400":{"description":"Bad Request","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CollectionModelCustomerRole"}}}}}}},"/v1/customers/{customerId}/policies":{"get":{"tags":["Customer Policies API"],"summary":"This API will return policy base details for all the customer's polices.","description":"## Synopsis\n\nThis API will return the base details for the customer's policies. Note, the *customerId* is an **internal ID** whereas\nthe *reference* is the **customer-facing** value. Internal IDs are used for further service calls...\n\n### Parameters\n\n* **effectiveDate** - (optional, default today), An effective date may be passed to this API and policies will be\n  returned that are in effect on the given effective date. *Also see behaviour of **includePastFutureOffset** parameter\n  below*\n* **includePastFutureOffset** (optional, default false), When this parameter value is *true*, the API will return\n  policies that are in effect over a *slice of time* rather than on a specific date, subject to service configuration.\n  Initially, the configuration is set to look **0 days back** and **60 days forward** (*from the **effectiveDate**\n  parameter*). The client system may then decide how to handle the returned items.\n\n### Behaviour\n\n* **Level of cover** - As well as returning policy base details such as the dates, product, etc., each policy will try\n  to display a representation of the level of cover via the **plan** object.\n\n  If every insured person on that policy has are on the same plan, and the plans are not different across the current\n  period of time, this plan will be printed out in the response.\n\n  If the one common plan is found, there will be a check for Geographic covers across all people on the policy too. If\n  all customers are on the same Geographic cover, the details of this cover will be returned in the response. If there\n  are differences in Geographic covers, the Geographic Cover will be returned as 'Multiple'.\n\n  Additionally, if the one common plan is found, there will be a check for common covers across all customers under the\n  policy. If *all* customers under the policy have the same combination of covers, the list of these covers will be\n  returned in the response. If there's at least one difference in customers's covers, the list of the covers will be\n  returned as a list containing one object, which is 'Multiple' cover.\n\n  I.e.:\n  ```\n  \n  \"plan\": {\n    \"planCode\": \"PLANA\",\n    \"geographicalRegionCode\": \"EURONLY\",\n    \"geographicalRegion\": \"Europe\",\n    \"covers\": [\n        {\n            \"coverCode\": \"MULTIPLE\",\n            \"name\": \"Multiple\"\n        }\n    ],\n  }\n\n``` \n* **Sorting** - Ordering is not specified in the service directly, though policies may be sensibly returned by product/date from the back end.\n* **Empty** - If no policies are in effect meeting the input criteria dates, an empty collection is returned.","operationId":"getPolicies","parameters":[{"name":"customerId","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"name":"effectiveDate","in":"query","required":false,"schema":{"type":"string","format":"date"}},{"name":"includePastFutureOffset","in":"query","required":false,"schema":{"type":"boolean","default":false}}],"responses":{"404":{"description":"Not Found","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"503":{"description":"Service Unavailable","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"406":{"description":"Not Acceptable","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"403":{"description":"Forbidden","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"405":{"description":"Method Not Allowed","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"409":{"description":"Conflict","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"415":{"description":"Unsupported Media Type","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"422":{"description":"Unprocessable Entity","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorsView"}}}},"500":{"description":"Internal Server Error","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"400":{"description":"Bad Request","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"200":{"description":"OK","content":{"*/*":{"schema":{"$ref":"#/components/schemas/CollectionModelPolicy"}}}}}}},"/v1/customers/{customerId}/policies/{policyId}/roles":{"get":{"tags":["Policy Roles API"],"summary":"This API will return policy role details","description":"## Synopsis\n\nGiven a valid **customerId** and **policyId**, this API will return the policy roles for the matching insured customer\nin the back-end system.\n\nThe API accepts optional parameters which can influence the amount of information returned. Logically, requesting\nfurther information will increase the load and the response times.\n\n### Parameters\n\n* **effectiveFrom** - Optional. The effective from date in ISO Short date format.\n* **effectiveTo** - Optional. The effective to date in ISO Short date format.\n* **roleType** - Optional. The role type such as PH for Policy Holder, INS for Insured\n\nThe **effectiveFrom** and **effectiveTo**  parameters have to be either both provided, or none of them. If only one of\nthem is provided in the request, 400 Bad Request error will be returned by the service.\n\nThe **effectiveFrom** (if provided) has to be before or equals to the **effectiveTo**. If it's not, 400 Bad Request\nerror will be returned by the service. ","operationId":"getPolicyRoles","parameters":[{"name":"customerId","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"name":"policyId","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"name":"effectiveFrom","in":"query","required":false,"schema":{"type":"string","format":"date"}},{"name":"effectiveTo","in":"query","required":false,"schema":{"type":"string","format":"date"}},{"name":"roleType","in":"query","required":false,"schema":{"type":"string"}}],"responses":{"404":{"description":"Not Found","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"503":{"description":"Service Unavailable","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"406":{"description":"Not Acceptable","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"403":{"description":"Forbidden","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"405":{"description":"Method Not Allowed","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"409":{"description":"Conflict","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"415":{"description":"Unsupported Media Type","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"422":{"description":"Unprocessable Entity","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorsView"}}}},"500":{"description":"Internal Server Error","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"400":{"description":"Bad Request","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CollectionModelCustomerRole"}}}}}}},"/v1/customers/{customerId}/covers":{"get":{"tags":["Customer Covers API"],"summary":"This API will return customers covers","description":"## Synopsis\n\nGiven a valid **customerId**, this API will return the customer cover details for the matching customer contact in the\nback-end system.\n\nThe API accepts optional parameters which can influence the amount of information returned. Logically, requesting\nfurther information will increase the load and the response times.\n\n### Parameters\n\n* **effectiveFrom** - Optional. The effective from date in ISO Short date format.\n* **effectiveTo** - Optional. The effective to date in ISO Short date format.\n* **policyId** - Optional. The policyId\n* **detailType** - Optional. The level of detail displayed (PLAN, MEMBERSHIP or COVER).\n* **productCode** - Optional. The product code e.g. COR, TRV, DNT.\n* **coverLevelCode** - Optional. The cover level code e.g. LIFCPE2K.\n* **coverCode** - Optional. The coverCode e.g. LIFSCPE2K.\n\nThe **effectiveFrom** and **effectiveTo**  parameters have to be either both provided, or none of them. If only one of\nthem is provided in the request, 400 Bad Request error will be returned by the service.\n\nThe **effectiveFrom** (if provided) has to be before or equals to the **effectiveTo**. If it's not, 400 Bad Request\nerror will be returned by the service. ","operationId":"getCustomerCovers","parameters":[{"name":"customerId","in":"path","required":true,"schema":{"type":"integer","format":"int64"}},{"name":"effectiveFrom","in":"query","required":false,"schema":{"type":"string","format":"date"}},{"name":"effectiveTo","in":"query","required":false,"schema":{"type":"string","format":"date"}},{"name":"policyId","in":"query","required":false,"schema":{"type":"integer","format":"int64"}},{"name":"detailType","in":"query","required":false,"schema":{"type":"string"}},{"name":"productCode","in":"query","required":false,"schema":{"type":"string"}},{"name":"coverLevelCode","in":"query","required":false,"schema":{"type":"string"}},{"name":"coverCode","in":"query","required":false,"schema":{"type":"string"}}],"responses":{"404":{"description":"Not Found","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"503":{"description":"Service Unavailable","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"406":{"description":"Not Acceptable","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"403":{"description":"Forbidden","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"405":{"description":"Method Not Allowed","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"409":{"description":"Conflict","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"415":{"description":"Unsupported Media Type","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"422":{"description":"Unprocessable Entity","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorsView"}}}},"500":{"description":"Internal Server Error","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"400":{"description":"Bad Request","content":{"*/*":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}},"200":{"description":"OK","content":{"application/json":{"schema":{"$ref":"#/components/schemas/CollectionModelCustomerCover"}}}}}}}},"components":{"schemas":{"ApiErrorResponse":{"title":"ApiErrorResponse","type":"object","properties":{"status":{"type":"integer","description":"Status","format":"int32"},"errorCode":{"type":"string","description":"Error Code"},"message":{"type":"string","description":"Message"},"devMessage":{"type":"string","description":"Dev Message"}},"description":"ApiErrorResponse"},"ApiErrorsView":{"title":"ApiErrorsView","type":"object","properties":{"status":{"type":"integer","description":"Status","format":"int32"},"errorCode":{"type":"string","description":"Error Code"},"message":{"type":"string","description":"Message"},"devMessage":{"type":"string","description":"Dev Message"},"fieldErrors":{"type":"array","description":"Field Errors","items":{"$ref":"#/components/schemas/ApiFieldError"}},"globalErrors":{"type":"array","description":"Global Errors","items":{"$ref":"#/components/schemas/ApiGlobalError"}}},"description":"ApiErrorsView"},"ApiFieldError":{"title":"ApiFieldError","type":"object","properties":{"field":{"type":"string","description":"Field"},"code":{"type":"string","description":"Code"},"rejectedValue":{"type":"object","description":"Rejected Value"},"message":{"type":"string","description":"Message"}},"description":"ApiFieldError"},"ApiGlobalError":{"title":"ApiGlobalError","type":"object","properties":{"code":{"type":"string","description":"Code"},"message":{"type":"string","description":"Message"}},"description":"ApiGlobalError"},"StubPolicyValidationRequest":{"type":"object","properties":{"policyReference":{"type":"integer","format":"int64"},"dateOfBirth":{"type":"string","format":"date"},"validationType":{"type":"string"}}},"Link":{"type":"object","properties":{"rel":{"type":"string"},"href":{"type":"string"},"hreflang":{"type":"string"},"media":{"type":"string"},"title":{"type":"string"},"type":{"type":"string"},"deprecation":{"type":"string"},"profile":{"type":"string"},"name":{"type":"string"}}},"StubValidation":{"type":"object","properties":{"valid":{"type":"boolean"},"links":{"type":"array","items":{"$ref":"#/components/schemas/Link"}}}},"Address":{"title":"Address","type":"object","properties":{"addressLine1":{"type":"string","description":"Address Line 1","example":"123 Sesame St."},"addressLine2":{"type":"string","description":"Address Line 2","example":"Tinsel Town"},"addressLine3":{"type":"string","description":"Address Line 3","example":"Line 3"},"addressLine4":{"type":"string","description":"Address Line 4","example":"Line 4"},"addressLine5":{"type":"string","description":"Address Line 5","example":"Line 5"},"county":{"type":"string","description":"County","example":"KILKENNY"},"postcode":{"type":"string","description":"Postcode","example":"R95 WKK6"},"countryCode":{"type":"string","description":"Country Code","example":"IE"},"country":{"type":"string","description":"Country","example":"Republic of Ireland"}},"description":"Address"},"Cover":{"title":"Cover","type":"object","properties":{"coverCode":{"type":"string","description":"Cover Code","example":"TRVEXS"},"name":{"type":"string","description":"Cover Name","example":"Excess Waiver"},"mandatory":{"type":"boolean","description":"Mandatory Cover indicator","example":false},"effectiveFrom":{"type":"string","description":"Effective From Date","format":"date","example":"1963-11-21"},"effectiveTo":{"type":"string","description":"Effective To Date","format":"date","example":"1963-11-21"},"links":{"type":"array","items":{"$ref":"#/components/schemas/Link"}}},"description":"Covers"},"Customer":{"title":"Customer","type":"object","properties":{"id":{"type":"integer","description":"Id (internal)","format":"int64","example":123},"personId":{"type":"integer","description":"Person Id","format":"int64","example":1234567},"reference":{"type":"string","description":"Reference","example":"PARTNER /1234567"},"firstName":{"type":"string","description":"First Name","example":"Joe"},"middleName":{"type":"string","description":"Middle Name","example":"Bob"},"surname":{"type":"string","description":"Surname","example":"Bloggs"},"titleCode":{"type":"string","description":"Title Code","example":"MR"},"title":{"type":"string","description":"Title","example":"Mr"},"genderCode":{"type":"string","description":"Gender Code","example":"M"},"gender":{"type":"string","description":"Gender","example":"Male"},"dateOfBirth":{"type":"string","description":"Date Of Birth","format":"date","example":"1963-11-11"},"age":{"type":"integer","description":"Age","format":"int32","example":40},"dateOfDeath":{"type":"string","description":"Date Of Death","format":"date","example":"1963-11-11"},"dateOfAdoption":{"type":"string","description":"Date Of Adoption","format":"date","example":"1963-11-11"},"countryOfResidenceCode":{"type":"string","description":"Country Of Residence Code","example":"IE"},"countryOfResidence":{"type":"string","description":"Country Of Residence","example":"Republic of Ireland"},"countryOfTaxationCode":{"type":"string","description":"Country Of Taxation Code","example":"IE"},"countryOfTaxation":{"type":"string","description":"Country Of Taxation","example":"Republic of Ireland"},"memberClassification":{"type":"string","description":"Member Classification","example":"STAFF"},"onlineDocumentsNotification":{"type":"string","description":"Online Documents Notification","example":"EMAIL_SMS"},"enhancedMidwifeService":{"type":"boolean","description":"Eligible for Enhanced Midwife service","example":false},"offProductServices":{"type":"boolean","description":"Off-Product services are available","example":false},"snapAndSendClaimant":{"type":"boolean","description":"Eligible to be a Snap and Send Claimant","example":false},"onlineDoctorUnlimited":{"type":"boolean","description":"Online Doctor Unlimited","example":false},"prospectPartner":{"type":"boolean","description":"Prospect Indicator","example":false},"address":{"$ref":"#/components/schemas/Address"},"email":{"type":"string","description":"Email Address","example":"someone@somewhere.com"},"mobile":{"type":"string","description":"Mobile Number","example":"0831234567"},"homePhone":{"type":"string","description":"Home Phone Number","example":"017654321"},"workPhone":{"type":"string","description":"Work Phone Number","example":"017654321"},"links":{"type":"array","items":{"$ref":"#/components/schemas/Link"}}},"description":"Policy Holder"},"InsuredPerson":{"title":"InsuredPerson","type":"object","properties":{"id":{"type":"integer","description":"Id (internal)","format":"int64","example":123},"personId":{"type":"integer","description":"Person Id","format":"int64","example":1234567},"reference":{"type":"string","description":"Reference","example":"PARTNER /1234567"},"firstName":{"type":"string","description":"First Name","example":"Joe"},"middleName":{"type":"string","description":"Middle Name","example":"Bob"},"surname":{"type":"string","description":"Surname","example":"Bloggs"},"titleCode":{"type":"string","description":"Title Code","example":"MR"},"title":{"type":"string","description":"Title","example":"Mr"},"genderCode":{"type":"string","description":"Gender Code","example":"M"},"gender":{"type":"string","description":"Gender","example":"Male"},"dateOfBirth":{"type":"string","description":"Date Of Birth","format":"date","example":"1963-11-11"},"age":{"type":"integer","description":"Age","format":"int32","example":40},"dateOfDeath":{"type":"string","description":"Date Of Death","format":"date","example":"1963-11-11"},"dateOfAdoption":{"type":"string","description":"Date Of Adoption","format":"date","example":"1963-11-11"},"countryOfResidenceCode":{"type":"string","description":"Country Of Residence Code","example":"IE"},"countryOfResidence":{"type":"string","description":"Country Of Residence","example":"Republic of Ireland"},"countryOfTaxationCode":{"type":"string","description":"Country Of Taxation Code","example":"IE"},"countryOfTaxation":{"type":"string","description":"Country Of Taxation","example":"Republic of Ireland"},"memberClassification":{"type":"string","description":"Member Classification","example":"STAFF"},"onlineDocumentsNotification":{"type":"string","description":"Online Documents Notification","example":"EMAIL_SMS"},"enhancedMidwifeService":{"type":"boolean","description":"Eligible for Enhanced Midwife service","example":false},"offProductServices":{"type":"boolean","description":"Off-Product services are available","example":false},"snapAndSendClaimant":{"type":"boolean","description":"Eligible to be a Snap and Send Claimant","example":false},"onlineDoctorUnlimited":{"type":"boolean","description":"Online Doctor Unlimited","example":false},"prospectPartner":{"type":"boolean","description":"Prospect Indicator","example":false},"address":{"$ref":"#/components/schemas/Address"},"email":{"type":"string","description":"Email Address","example":"someone@somewhere.com"},"mobile":{"type":"string","description":"Mobile Number","example":"0831234567"},"homePhone":{"type":"string","description":"Home Phone Number","example":"017654321"},"workPhone":{"type":"string","description":"Work Phone Number","example":"017654321"},"insuredFrom":{"type":"string","description":"Insured From Date","format":"date","example":"1963-11-21"},"insuredTo":{"type":"string","description":"Insured To Date","format":"date","example":"1963-11-21"},"lifestageCode":{"type":"string","description":"Lifestage Code","example":"ADULT"},"lifestage":{"type":"string","description":"Lifestage","example":"Adult"},"ineligible":{"type":"boolean","description":"Ineligible","example":false},"links":{"type":"array","items":{"$ref":"#/components/schemas/Link"}}},"description":"Insured Persons"},"Plan":{"title":"Plan","type":"object","properties":{"planCode":{"type":"string","description":"Plan Code","example":"TRVFMLLWRL"},"name":{"type":"string","description":"Plan Name","example":"Family <65 Worldwide"},"geographicalRegionCode":{"type":"string","description":"Geographical Region Code","example":"WRLDFLL"},"geographicalRegion":{"type":"string","description":"Geographical Region","example":"World Wide"},"effectiveFrom":{"type":"string","description":"Effective From Date","format":"date","example":"1963-11-21"},"effectiveTo":{"type":"string","description":"Effective To Date","format":"date","example":"1963-11-21"},"covers":{"type":"array","description":"Covers","items":{"$ref":"#/components/schemas/Cover"}},"links":{"type":"array","items":{"$ref":"#/components/schemas/Link"}}},"description":"Plan Object"},"Policy":{"title":"Policy","type":"object","properties":{"policyId":{"type":"integer","description":"Policy Id","format":"int64","example":1234567},"reference":{"type":"string","description":"Policy Reference","example":"0001234567"},"policyStartDate":{"type":"string","description":"Policy Start Date","format":"date","example":"1963-11-21"},"policyEndDate":{"type":"string","description":"Policy End Date","format":"date","example":"1963-11-21"},"termStartDate":{"type":"string","description":"Term Start Date","format":"date","example":"1963-11-21"},"termEndDate":{"type":"string","description":"Term End Date","format":"date","example":"1963-11-21"},"endOfTermActionCode":{"type":"string","description":"End Of Term Action Code","example":"REN"},"endOfTermAction":{"type":"string","description":"End Of Term Action","example":"Renew Automatically"},"productCode":{"type":"string","description":"Product code","example":"COR"},"product":{"type":"string","description":"Product","example":"Hospital"},"plan":{"$ref":"#/components/schemas/Plan"},"schemeId":{"type":"integer","description":"Scheme Id","format":"int64","example":9575},"categoryId":{"type":"integer","description":"Category Id","format":"int64","example":123},"ratingStatusCode":{"type":"string","description":"Rating Status Code","example":"Hospital"},"ratingStatus":{"type":"string","description":"Rating Status","example":"Hospital"},"ratingLevel":{"type":"string","description":"Rating Level","example":"Hospital"},"locked":{"type":"boolean","description":"Locked","example":false},"insuredPersons":{"type":"array","description":"Insured Persons","items":{"$ref":"#/components/schemas/InsuredPerson"}},"policyHolder":{"$ref":"#/components/schemas/Customer"},"links":{"type":"array","items":{"$ref":"#/components/schemas/Link"}}}},"CollectionModelInsuredPerson":{"type":"object","properties":{"links":{"type":"array","items":{"$ref":"#/components/schemas/Link"}},"content":{"type":"array","items":{"$ref":"#/components/schemas/InsuredPerson"}}}},"StubCustomer":{"type":"object","properties":{"id":{"type":"integer","description":"Id (internal)","format":"int64","example":123},"personId":{"type":"integer","description":"Person Id","format":"int64","example":1234567},"reference":{"type":"string","description":"Reference","example":"PARTNER /1234567"},"firstName":{"type":"string","description":"First Name","example":"Joe"},"middleName":{"type":"string","description":"Middle Name","example":"Bob"},"surname":{"type":"string","description":"Surname","example":"Bloggs"},"titleCode":{"type":"string","description":"Title Code","example":"MR"},"title":{"type":"string","description":"Title","example":"Mr"},"genderCode":{"type":"string","description":"Gender Code","example":"M"},"gender":{"type":"string","description":"Gender","example":"Male"},"dateOfBirth":{"type":"string","description":"Date Of Birth","format":"date","example":"1963-11-11"},"age":{"type":"integer","description":"Age","format":"int32","example":40},"dateOfDeath":{"type":"string","description":"Date Of Death","format":"date","example":"1963-11-11"},"dateOfAdoption":{"type":"string","description":"Date Of Adoption","format":"date","example":"1963-11-11"},"countryOfResidenceCode":{"type":"string","description":"Country Of Residence Code","example":"IE"},"countryOfResidence":{"type":"string","description":"Country Of Residence","example":"Republic of Ireland"},"countryOfTaxationCode":{"type":"string","description":"Country Of Taxation Code","example":"IE"},"countryOfTaxation":{"type":"string","description":"Country Of Taxation","example":"Republic of Ireland"},"memberClassification":{"type":"string","description":"Member Classification","example":"STAFF"},"onlineDocumentsNotification":{"type":"string","description":"Online Documents Notification","example":"EMAIL_SMS"},"enhancedMidwifeService":{"type":"boolean","description":"Eligible for Enhanced Midwife service","example":false},"offProductServices":{"type":"boolean","description":"Off-Product services are available","example":false},"snapAndSendClaimant":{"type":"boolean","description":"Eligible to be a Snap and Send Claimant","example":false},"onlineDoctorUnlimited":{"type":"boolean","description":"Online Doctor Unlimited","example":false},"prospectPartner":{"type":"boolean","description":"Prospect Indicator","example":false},"address":{"$ref":"#/components/schemas/Address"},"email":{"type":"string","description":"Email Address","example":"someone@somewhere.com"},"mobile":{"type":"string","description":"Mobile Number","example":"0831234567"},"homePhone":{"type":"string","description":"Home Phone Number","example":"017654321"},"workPhone":{"type":"string","description":"Work Phone Number","example":"017654321"},"optInMarketingPhone":{"type":"boolean"},"optInMarketingPost":{"type":"boolean"},"optInMarketingEmail":{"type":"boolean"},"optInMarketingSms":{"type":"boolean"},"ppsNumber":{"type":"string"},"links":{"type":"array","items":{"$ref":"#/components/schemas/Link"}}}},"Category":{"title":"Category","type":"object","properties":{"categoryId":{"type":"integer","description":"Category Id","format":"int64","example":85937},"name":{"type":"string","description":"Category Name","example":"CPPL1 & Dental 100% Emp,Sp, Dom Ptnrs, Deps."},"webAccess":{"type":"boolean","description":"Web Access","example":false},"webCategoryName":{"type":"string","description":"Web Category Name","example":"Directors"},"links":{"type":"array","items":{"$ref":"#/components/schemas/Link"}}},"description":"Categories"},"GroupScheme":{"title":"GroupScheme","type":"object","properties":{"id":{"type":"integer","description":"Corporate Scheme Id","format":"int64","example":13},"schemeId":{"type":"integer","description":"Gios Scheme Id","format":"int64","example":7418},"reference":{"type":"string","description":"Reference","example":"0000003587"},"schemeDate":{"type":"string","description":"Scheme Date","format":"date","example":"1963-11-11"},"name":{"type":"string","description":"Scheme Name","example":"Workday"},"schemeRenewalDate":{"type":"string","description":"Scheme Renewal Date","format":"date","example":"1963-11-11"},"policyRenewalDate":{"type":"string","description":"Policy Renewal Date","format":"date","example":"1963-11-11"},"webAccess":{"type":"boolean","description":"Web Access Indicator","example":false},"webRenewalFrom":{"type":"string","description":"Web Renewal From Date","format":"date","example":"1963-11-11"},"webRenewalTo":{"type":"string","description":"Web Renewal To Date","format":"date","example":"1963-11-11"},"webSchemeName":{"type":"string","description":"Web Scheme Name","example":"Workday"},"onlineDoctor":{"type":"boolean","description":"Online Doctor Indicator","example":false},"enhancedMidwifeService":{"type":"boolean","description":"Enhanced Midwife service is offered","example":false},"offProductServices":{"type":"boolean","description":"Off-Product services are available","example":false},"webCustomEnrolment":{"type":"boolean","description":"Web Custom Enrolment Indicator","example":false},"groupId":{"type":"integer","description":"Group Id","format":"int64","example":7417},"concierge":{"type":"boolean","description":"Concierge Indicator","example":false},"categories":{"type":"array","description":"Categories","items":{"$ref":"#/components/schemas/Category"}},"webVhiContact":{"$ref":"#/components/schemas/SchemeContact"},"links":{"type":"array","items":{"$ref":"#/components/schemas/Link"}}}},"SchemeContact":{"title":"SchemeContact","type":"object","properties":{"customerId":{"type":"integer","description":"Customer Id","format":"int64","example":123},"address":{"$ref":"#/components/schemas/Address"},"email":{"type":"string","description":"Email Address","example":"someone@somewhere.com"},"mobile":{"type":"string","description":"Mobile Number","example":"0831234567"},"homePhone":{"type":"string","description":"Home Phone Number","example":"017654321"},"workPhone":{"type":"string","description":"Work Phone Number","example":"017654321"},"links":{"type":"array","items":{"$ref":"#/components/schemas/Link"}}},"description":"Web Vhi Contact number if available"},"CollectionModelCustomerRole":{"type":"object","properties":{"links":{"type":"array","items":{"$ref":"#/components/schemas/Link"}},"content":{"type":"array","items":{"$ref":"#/components/schemas/CustomerRole"}}}},"CustomerRole":{"title":"CustomerRole","type":"object","properties":{"objectTypeCode":{"type":"string","description":"Object Type Code","example":"P"},"objectType":{"type":"string","description":"Object Type","example":"Policy"},"objectId":{"type":"integer","description":"Object ID","format":"int64","example":3386325},"objectReference":{"type":"string","description":"Object Reference","example":"0003151511"},"roleTypeCode":{"type":"string","description":"Role Type Code","example":"PH"},"roleType":{"type":"string","description":"Role Type","example":"Policy Holder"},"effectiveFrom":{"type":"string","description":"Effective From","format":"date","example":"1963-11-11"},"effectiveTo":{"type":"string","description":"Effective To","format":"date","example":"1963-11-11"},"links":{"type":"array","items":{"$ref":"#/components/schemas/Link"}}}},"CollectionModelPolicy":{"type":"object","properties":{"links":{"type":"array","items":{"$ref":"#/components/schemas/Link"}},"content":{"type":"array","items":{"$ref":"#/components/schemas/Policy"}}}},"CollectionModelCustomerCover":{"type":"object","properties":{"links":{"type":"array","items":{"$ref":"#/components/schemas/Link"}},"content":{"type":"array","items":{"$ref":"#/components/schemas/CustomerCover"}}}},"CustomerCover":{"title":"CustomerCover","type":"object","properties":{"policyId":{"type":"integer","description":"Policy Id","format":"int64","example":1234567},"policyReference":{"type":"string","description":"Policy Reference","example":"0001234567"},"detailType":{"type":"string","description":"Detail Type","example":"COVERSET"},"productCode":{"type":"string","description":"Product Code","example":"TRV"},"product":{"type":"string","description":"Product","example":"Travel"},"coverLevelCode":{"type":"string","description":"Cover Level Code","example":"TRVFMLLWRL"},"coverLevel":{"type":"string","description":"Cover Level","example":"Family <65 Worldwide"},"coverCode":{"type":"string","description":"Cover Code","example":"TRVTX1"},"cover":{"type":"string","description":"Cover","example":"3 Month Trip Extension"},"mandatoryCover":{"type":"boolean","description":"Mandatory Cover indicator","example":false},"effectiveFrom":{"type":"string","description":"Effective From","format":"date","example":"1963-11-11"},"effectiveTo":{"type":"string","description":"Effective To","format":"date","example":"1963-11-11"},"links":{"type":"array","items":{"$ref":"#/components/schemas/Link"}}}}},"responses":{"500":{"description":"Internal Server Error","content":{"application/json":{"schema":{"$ref":"#/components/schemas/ApiErrorResponse"}}}}},"securitySchemes":{"OAuth2":{"type":"oauth2","flows":{"implicit":{"authorizationUrl":"https://api.pit.vhi.ie/auth/oauth/v2/authorize","scopes":{"read":"Grants read access","write":"Grants write access","admin":"Grants access to admin operations"}}}}}}}